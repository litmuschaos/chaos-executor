---
version: 2.1
executors:
  cosmic:
    docker:
      - image: circleci/buildpack-deps:cosmic
    resource_class: medium
jobs:
  setup-env:
    executor: cosmic
    steps:
      - run: mkdir -p workspace
      - run:
          name: Setup ENV
          command: |
            echo 'export HOME="/home/circleci"' >> workspace/env-vars
            echo 'export GOPATH="$HOME/go"' >> workspace/env-vars
            echo 'export PATH="$GOPATH/bin:$PATH"' >> workspace/env-vars
            echo 'export REPONAME="litmuschaos"' >> workspace/env-vars
            echo 'export IMGNAME="chaos-runner"' >> workspace/env-vars
            echo 'export IMGTAG="ci"' >> workspace/env-vars
            echo 'export K8S_VERSION="v1.12.0"' >> workspace/env-vars
            echo 'export KUBECONFIG="/home/circleci/.kube/config"' >> workspace/env-vars
            echo 'export MINIKUBE_VERSION="v1.3.1"' >> workspace/env-vars
            cat workspace/env-vars >> $BASH_ENV
            source $BASH_ENV
      - persist_to_workspace:
          root: workspace
          paths:
            - env-vars
  docker-build:
    machine:
      image: circleci/classic:201808-01
      resource_class: large
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          cat /tmp/workspace/env-vars >> $BASH_ENV
          source $BASH_ENV
      - checkout
      - run:
          command: ls && pwd
      - run:
          name: Build chaos-runner image
          command: docker build . -f build/Dockerfile -t ${REPONAME}/${IMGNAME}:${IMGTAG}
          working_directory: ~/project
      - run:
          name: Save chaos-runner docker image
          command: docker save -o /tmp/workspace/image.tar ${REPONAME}/${IMGNAME}:${IMGTAG}
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - image.tar
  tests:
    machine:
      image: circleci/classic:201808-01
      resource_class: large
    working_directory: ~/go/src/github.com/litmuschaos/chaos-runner
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          cat /tmp/workspace/env-vars >> $BASH_ENV
          source $BASH_ENV
      - checkout
      - run:
          name: go version
          command: go version
      - run:
          name: Setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
      - run:
          name: Setup minikube
          command: |
            curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64  && chmod +x minikube
            sudo install minikube /usr/local/bin
      - run:
          name: Start minikube
          command: |
            sudo -E minikube start --vm-driver=none --cpus 2 --memory 4096 --kubernetes-version=${K8S_VERSION}
      - run:
          name: Running tests
          command: make test
  trivy-check:
    machine: true
    environment:
      TRIVYARCH: "64bit"
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          cat /tmp/workspace/env-vars >> $BASH_ENV
          source $BASH_ENV
      - checkout
      - run: |
          export VERSION=$(curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
          echo ${VERSION}
          wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-${TRIVYARCH}.tar.gz
          tar zxvf trivy_${VERSION}_Linux-${TRIVYARCH}.tar.gz
          sudo apt-get update
          sudo apt-get install rpm
      - run: |
          ./trivy --exit-code 0 --severity HIGH --no-progress ${REPONAME}/${IMGNAME}:${IMGTAG}
          ./trivy --exit-code 0 --severity CRITICAL --no-progress ${REPONAME}/${IMGNAME}:${IMGTAG}
  docker-push:
    machine:
      image: circleci/classic:201808-01
      resource_class: large
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          cat /tmp/workspace/env-vars >> $BASH_ENV
          source $BASH_ENV
      - checkout
      - run:
          name: Loading docker images
          command: |
            docker load -i /tmp/workspace/image.tar
      - run:
          name: Pushing chaos-runner
          command: bash ~/go/src/github.com/litmuschaos/chaos-runner/build/push --type=ci
  release:
    machine:
      image: circleci/classic:201808-01
      resource_class: large
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          cat /tmp/workspace/env-vars >> $BASH_ENV
          source $BASH_ENV
      - checkout
      - run:
          name: Loading docker images
          command: |
            docker load -i /tmp/workspace/image.tar
      - run:
          name: Docker images
          command: docker images
      - run:
          name: Pushing chaos runner server
          command: bash ~/go/src/github.com/litmuschaos/chaos-runner/build/push --type=release

workflows:
  version: 2
  chaos-runner:
    jobs:
      - setup-env:
          filters:
            tags:
              only: /.*/
#      - docker-build:
#          requires:
#            - setup-env
#          filters:
#            tags:
#              only: /.*/
      - tests:
          requires:
            - setup-env
          filters:
            tags:
              only: /.*/
#      - trivy-check:
#          requires:
#            - docker-build
#          filters:
#            tags:
#              only: /.*/
      - docker-push:
          requires:
#            - trivy-check
            - tests
          filters:
            branches:
              only:
                - master
                - /^v.*/
      - release:
          requires:
#            - trivy-check
            - tests
          filters:
            ## release jobs needs to be run for tagged releases alone & not for any branch commits
            branches:
              ignore: /.*/
            tags:
              only: /.*/